.row
  .col-md-6
    %p
      The API has two main components. The Image Upload Service and the Issue Reporting Service. There is an
      %a{:href => '/eula'} eula page
      and an
      %a{:href => '/about'} about page
  .col-md-6
    %p All requests will be surrounded with
    %pre= preview_jbuilder('shared/sample_body')

.row.spacer
  .col-md-6
    %h3 Image Upload Service
    %p Used to upload <b>png</b> images to the server. Will return a public url for the image and an url for the server generated thumbnail
    %p <b>POST</b> /upload with 'image' param
    %p Examples:
    %p curl -X POST -F "image=@public/images/logo.png" #{URI.join(Repara.base_url, image_upload_path)}
    %p
      %a{:href => '/up'} form example
  .col-md-6
    %p Sample response:
    %pre= preview_jbuilder('images/create')

.row.spacer
  .col-md-6
    %h3 Issue Reporting Service
    %p All requests should have the Content-Type header set to <b>application/json</b>
    %p If no address is specified, the issue will be geocoded from lat and lon
    %p issue.category will be lower cased by the server
    %p max string length for
    %ul
      %li
        %p name #{Repara.name_max_length}
      %li
        %p comment #{Repara.comments_max_length}
      %li
        %p address #{Repara.address_max_length}
  .col-md-6
    %p Example issue
    %pre= preview_jbuilder('issues/_issue')

.row.spacer
  .col-md-12
    %h3 Requests
    %p <b>GET</b> /meta
    %p
      %a{:href => '/meta'} example

.row.spacer
  .col-md-12
    %p <b>GET</b> /issues
    %p Optional query params
    %p q (default to none) - search query string
    %p limit (default 10)
    %p skip (default 0)
    %p
      %a{:href => '/issues'} example
    %p curl -X GET -H 'Content-Type: application/json' #{Repara.base_url}issues

.row.spacer
  .col-md-12
    %p <b>GET</b> /issues/ISSUE_ID
    %p curl -X GET -H 'Content-Type: application/json' #{Repara.base_url}issues/ISSUE_ID

    %br
    %p <b>POST</b> /issues
    %p curl -X POST -H 'Content-Type: application/json' -d '{"name":"hello", "category":"altele", "lat":0, "lon":0,"images":[{"url": "#{Repara.base_url}images/logo.png"}]}' #{Repara.base_url}issues
    %p Required body params: name, category, lat, lon, images
    %p
      Valid categories:
      = Repara.categories

.row.spacer
  .col-md-12
    %p <b>PUT</b> /issues/:id
    %p curl -X PUT -H 'Content-Type: application/json' -d '{"name":"test2"}' #{Repara.base_url}issues/#{@issue['_id']}

.row.spacer
  .col-md-6
    %p <b>PUT</b> /issues/:id/add_to_set
    %p curl -X PUT -H 'Content-Type: application/json' -d '{"images":[{"url":"#{Repara.base_url}images/logo2.png"}]}' #{Repara.base_url}issues/#{@issue['_id']}/add_to_set
    %p a request with the body set as shown below will add url1 and ulr2 to issue.images and comment1 to issue.comments if they are not already there
  .col-md-6
    %pre= pretty_json({images: [{url: 'url1'}, {url: 'url2'}], comments: ['comment1'] }.to_json)

.row.spacer
  .col-md-12
    %p <b>POST</b> /issues/:id/vote
    %p curl -X POST -H 'Content-Type: application/json' -d '{}' #{Repara.base_url}issues/#{@issue['_id']}/vote
    %p note: in HTML, length in a POST request is mandatory. send an empty hash if needed

- if Repara.config['allow_downvotes']
  .row.spacer
    .col-md-12
      %p <b>DELETE</b> /issues/:id/vote
      %p curl -X DELETE -H 'Content-Type: application/json' #{Repara.base_url}issues/#{@issue['_id']}/vote

- if Repara.config['allow_delete_all']
  .row.spacer
    .col-md-6
      %p <b>DELETE</b> /cleanup - not available in production
      %p curl -X DELETE -H 'Content-Type: application/json' #{Repara.base_url}cleanup
    .col-md-6
      %pre= preview_jbuilder('web/cleanup')

.row.spacer
  .col-md-6
    %h2 Error Codes
    %table.table.table-striped.table-bordered.table-condensed
      %thead
        %tr
          %th Code
          %th Description
      %tbody
        - RequestCodes.constants.each do |rc|
          %tr
            %td <b>#{RequestCodes.const_get(rc)}</b>
            %td #{rc.to_s.gsub('_', ' ').downcase}
  .col-md-6
    %p Example error
    %pre= preview_jbuilder('shared/sample_error')
